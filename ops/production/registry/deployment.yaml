apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-deployment
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0       # Don't create new pods before old ones terminate
      maxUnavailable: 1 # Allow one pod to be unavailable during update
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2
        ports:
        - containerPort: 5000
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_HTTP_CLIENT_TIMEOUT
          value: "600s"  # 10 minutes
        - name: REGISTRY_HTTP_REQUESTTIMEOUT
          value: "600s"  # 10 minutes
        - name: REGISTRY_HTTP_RESPONSEHEADER_TIMEOUT
          value: "600s"  # 10 minutes
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: "/auth/htpasswd"
        volumeMounts:
        - name: registry-data
          mountPath: /var/lib/registry
        - name: auth-volume
          mountPath: /auth
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: registry-data
        persistentVolumeClaim:
          claimName: registry-pvc
      - name: auth-volume
        secret:
          secretName: registry-secrets
